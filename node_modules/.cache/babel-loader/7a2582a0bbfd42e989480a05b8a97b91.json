{"ast":null,"code":"var _jsxFileName = \"/Users/pawelsowinski/Desktop/React/kurs_walut/src/Cryptolist.js\";\nimport React from 'react';\n\nconst CryptoList = props => {\n  const currencyList = props.cryptoArray.map((currency, index) => {\n    return React.createElement(\"li\", {\n      className: \"lists\",\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 5\n      },\n      __self: this\n    }, \"Country: \", currency.currency, \" || Last Rate: \", React.createElement(\"span\", {\n      className: currency.class,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 5\n      },\n      __self: this\n    }, currency.last));\n  });\n  return React.createElement(\"ul\", {\n    className: \"ul-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, currencyList);\n};\n\nexport default CryptoList;","map":{"version":3,"sources":["/Users/pawelsowinski/Desktop/React/kurs_walut/src/Cryptolist.js"],"names":["React","CryptoList","props","currencyList","cryptoArray","map","currency","index","class","last"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC1B,QAAMC,YAAY,GAAGD,KAAK,CAACE,WAAN,CAAkBC,GAAlB,CAAsB,CAACC,QAAD,EAAWC,KAAX,KAAqB;AAC5D,WAAQ;AAAI,MAAA,SAAS,EAAC,OAAd;AAAsB,MAAA,GAAG,EAAEA,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA4CD,QAAQ,CAACA,QAArD,qBAA6E;AAAM,MAAA,SAAS,EAAEA,QAAQ,CAACE,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkCF,QAAQ,CAACG,IAA3C,CAA7E,CAAR;AACH,GAFoB,CAArB;AAIA,SACI;AAAI,IAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBN,YAAzB,CADJ;AAGH,CARD;;AAUA,eAAeF,UAAf","sourcesContent":["import React from 'react';\n\nconst CryptoList = (props) => {\n    const currencyList = props.cryptoArray.map((currency, index) => {\n        return (<li className=\"lists\" key={index}>Country: {currency.currency} || Last Rate: <span className={currency.class}>{currency.last}</span></li>)\n    });\n    \n    return(\n        <ul className=\"ul-list\">{currencyList}</ul>\n    )\n}\n\nexport default CryptoList;"]},"metadata":{},"sourceType":"module"}