{"ast":null,"code":"var _jsxFileName = \"/Users/pawelsowinski/Desktop/React/kurs_walut/src/Input.js\";\nimport React, { Component } from 'react';\nimport CryptoList from './Cryptolist';\nimport axios from 'axios';\n\nclass Input extends Component {\n  constructor() {\n    super();\n\n    this.getCurrencyData = () => {\n      console.log('pobieram');\n      axios.get(\"https://blockchain.info/pl/ticker\").then(res => {\n        const currencyList = res.data;\n        let currentArray = [];\n\n        for (let key in currencyList) {\n          let newCurrency = currencyList[key];\n          currencyList[key].currency = key;\n          currentArray.push(currencyList[key]);\n        }\n\n        this.setState({\n          currencyList: currentArray\n        });\n      });\n    };\n\n    this.state = {\n      currencyList: []\n    };\n  }\n\n  componentDidMount() {\n    this.getCurrencyData();\n    this.timer = setInterval(this.getCurrencyData(), 1000);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"input-element\",\n      type: \"text\",\n      placeholder: \"Wpisz kraj\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    })), React.createElement(CryptoList, {\n      cryptoArray: this.state.currencyList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default Input;","map":{"version":3,"sources":["/Users/pawelsowinski/Desktop/React/kurs_walut/src/Input.js"],"names":["React","Component","CryptoList","axios","Input","constructor","getCurrencyData","console","log","get","then","res","currencyList","data","currentArray","key","newCurrency","currency","push","setState","state","componentDidMount","timer","setInterval","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,KAAN,SAAoBH,SAApB,CAA8B;AAE1BI,EAAAA,WAAW,GAAG;AACV;;AADU,SAQdC,eARc,GAQI,MAAM;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAL,MAAAA,KAAK,CAACM,GAAN,sCACKC,IADL,CACUC,GAAG,IAAI;AACT,cAAMC,YAAY,GAAGD,GAAG,CAACE,IAAzB;AAEA,YAAIC,YAAY,GAAG,EAAnB;;AAEI,aAAK,IAAIC,GAAT,IAAgBH,YAAhB,EAA8B;AAC1B,cAAII,WAAW,GAAGJ,YAAY,CAACG,GAAD,CAA9B;AAEAH,UAAAA,YAAY,CAACG,GAAD,CAAZ,CAAkBE,QAAlB,GAA6BF,GAA7B;AACAD,UAAAA,YAAY,CAACI,IAAb,CAAkBN,YAAY,CAACG,GAAD,CAA9B;AACH;;AACD,aAAKI,QAAL,CAAc;AAACP,UAAAA,YAAY,EAAEE;AAAf,SAAd;AACH,OAbT;AAcH,KAxBa;;AAGV,SAAKM,KAAL,GAAa;AACTR,MAAAA,YAAY,EAAE;AADL,KAAb;AAGH;;AAoBDS,EAAAA,iBAAiB,GAAG;AAChB,SAAKf,eAAL;AAEA,SAAKgB,KAAL,GAAaC,WAAW,CAAC,KAAKjB,eAAL,EAAD,EAAyB,IAAzB,CAAxB;AAEH;;AAEDkB,EAAAA,MAAM,GAAG;AACL,WACA;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,SAAS,EAAC,eAAjB;AAAiC,MAAA,IAAI,EAAC,MAAtC;AAA6C,MAAA,WAAW,EAAC,YAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,GAGA,oBAAC,UAAD;AAAY,MAAA,WAAW,EAAE,KAAKJ,KAAL,CAAWR,YAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJA;AAKE;;AAzCoB;;AA6C9B,eAAeR,KAAf","sourcesContent":["import React, {Component} from 'react';\nimport CryptoList from './Cryptolist';\n\nimport axios from 'axios';\n\nclass Input extends Component {\n\n    constructor() {\n        super();\n\n        this.state = {\n            currencyList: []\n        }\n    };\n\n    getCurrencyData = () => {\n        console.log('pobieram');\n        axios.get(`https://blockchain.info/pl/ticker`)\n            .then(res => {\n                const currencyList = res.data;\n\n                let currentArray = [];\n\n                    for( let key in currencyList) {\n                        let newCurrency = currencyList[key];\n\n                        currencyList[key].currency = key;\n                        currentArray.push(currencyList[key]);\n                    }\n                    this.setState({currencyList: currentArray});\n                })\n    }\n\n    componentDidMount() {\n        this.getCurrencyData();\n\n        this.timer = setInterval(this.getCurrencyData(), 1000);\n        \n    };\n\n    render() {\n        return(\n        <div className=\"input\">\n            <input className=\"input-element\" type=\"text\" placeholder=\"Wpisz kraj\" />\n        </div>,\n        <CryptoList cryptoArray={this.state.currencyList}/>\n        )}\n\n    }\n\nexport default Input;"]},"metadata":{},"sourceType":"module"}