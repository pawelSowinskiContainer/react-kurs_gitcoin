{"ast":null,"code":"var _jsxFileName = \"/Users/pawelsowinski/Desktop/React/kurs_walut/src/Crypto.js\";\nimport React, { Component } from 'react';\nimport CryptoList from './Cryptolist';\nimport axios from 'axios';\n\nclass Crypto extends Component {\n  constructor() {\n    super();\n\n    this.getCurrencyData = () => {\n      console.log('pobieram');\n      axios.get(\"https://blockchain.info/pl/ticker\").then(res => {\n        const currencyList = res.data;\n        let currentArray = [];\n        filteredCountries = [];\n        let i = 0;\n\n        for (let key in currencyList) {\n          let newCurrency = currencyList[key];\n          let prevCurrency = this.state.currencyList[i];\n\n          if (prevCurrency !== undefined) {\n            if (prevCurrency.last > newCurrency.last) {\n              newCurrency.class = 'red';\n            } else if (prevCurrency.last < newCurrency.last) {\n              newCurrency.class = 'green';\n            } else {\n              newCurrency.class = 'blue';\n            }\n          } else {\n            newCurrency.class = 'blue';\n          }\n\n          newCurrency.currency = key;\n          currentArray.push(currencyList[key]);\n          i++;\n        }\n\n        this.setState({\n          currencyList: currentArray,\n          filteredCountries: currentArray\n        });\n      });\n    };\n\n    this.inputChange = event => {\n      let trimValue = event.target.value.trim();\n      let currentCountry = this.state.currencyList;\n      let filteredList = currentCountry.filter(currentPost => {\n        return currentPost.currency.includes(trimValue);\n      });\n      this.setState({\n        filteredCountries: filteredList\n      });\n    };\n\n    this.state = {\n      currencyList: [] // filteredCountries: []\n\n    };\n  }\n\n  componentDidMount() {\n    this.getCurrencyData();\n    this.timer = setInterval(this.getCurrencyData, 10000);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"input-element\",\n      type: \"text\",\n      placeholder: \"Wpisz kraj\",\n      onChange: this.inputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    })), React.createElement(CryptoList, {\n      cryptoArray: this.state.currencyList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Crypto;","map":{"version":3,"sources":["/Users/pawelsowinski/Desktop/React/kurs_walut/src/Crypto.js"],"names":["React","Component","CryptoList","axios","Crypto","constructor","getCurrencyData","console","log","get","then","res","currencyList","data","currentArray","filteredCountries","i","key","newCurrency","prevCurrency","state","undefined","last","class","currency","push","setState","inputChange","event","trimValue","target","value","trim","currentCountry","filteredList","filter","currentPost","includes","componentDidMount","timer","setInterval","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport CryptoList from './Cryptolist';\n\nimport axios from 'axios';\n\nclass Crypto extends Component {\n\n    constructor() {\n        super();\n\n        this.state = {\n            currencyList: [],\n            // filteredCountries: []\n        }\n    };\n\n    getCurrencyData = () => {\n        console.log('pobieram');\n        axios.get(`https://blockchain.info/pl/ticker`)\n            .then(res => {\n                const currencyList = res.data;\n\n                let currentArray = [];\n                filteredCountries = [];\n                let i = 0;\n\n                    for( let key in currencyList) {\n\n                        let newCurrency = currencyList[key];\n                        let prevCurrency = this.state.currencyList[i];\n\n                        if(prevCurrency !== undefined) {\n                            if(prevCurrency.last>newCurrency.last) {\n                                newCurrency.class = 'red';\n\n                            } else if(prevCurrency.last<newCurrency.last) {\n                                newCurrency.class = 'green';\n                            } else {\n                                newCurrency.class = 'blue';\n                            }\n\n                    } else {\n                            newCurrency.class = 'blue';\n                        }\n                        \n                        newCurrency.currency = key;\n                        currentArray.push(currencyList[key]);\n                        i++;\n                    }\n                    this.setState({currencyList: currentArray, filteredCountries: currentArray});\n                    \n                })\n    }\n\n    componentDidMount() {\n        this.getCurrencyData();\n\n        this.timer = setInterval(this.getCurrencyData, 10000);\n        \n    };\n\n    inputChange = (event) => {\n\n        let trimValue = event.target.value.trim();\n        let currentCountry = this.state.currencyList;\n\n        let filteredList = currentCountry.filter(currentPost => {\n            return currentPost.currency.includes(trimValue)\n        });\n\n        this.setState({filteredCountries: filteredList})\n        \n        \n    }\n\n    render() {\n        return(\n        <div>\n            <div className=\"input\">\n                <input className=\"input-element\" type=\"text\" placeholder=\"Wpisz kraj\" onChange={this.inputChange}/>\n            </div>\n            <CryptoList cryptoArray={this.state.currencyList}/>\n        </div>\n        )}\n\n    }\n\nexport default Crypto;"]},"metadata":{},"sourceType":"module"}